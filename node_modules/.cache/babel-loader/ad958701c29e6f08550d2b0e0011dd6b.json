{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiny\\\\Downloads\\\\ReactFoodOrderApp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmountBill = `â‚¹${cartCtx.totalAmountBill}`; //console.log(totalAmountBill, 'Cart.ks',  cartCtx.totalAmountBill)\n\n  const cartHasItems = cartCtx.items.length > 0; //prefer useStae and if else to manage this\n\n  const cartItemnRemoveItemHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartAddItemHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    }); //cartAddItemHandler.bind(null, item) //{()=>cartAddItemHandler(item)}\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemnRemoveItemHandler.bind(null, item.id),\n      onAdd: cartAddItemHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  const submitOrderHandler = async userData => {\n    //skipped error handling\n    setIsSubmitting(true);\n    await fetch(\"https://foodorder-dcfa5-default-rtdb.firebaseio.com/orders\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const callToAction = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), cartHasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmountBill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), !isCheckout && callToAction]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onBackdropClick: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/shiny/Downloads/ReactFoodOrderApp/src/components/Cart/Cart.js"],"names":["React","useState","useContext","classes","Modal","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmountBill","cartHasItems","items","length","cartItemnRemoveItemHandler","id","removeItem","cartAddItemHandler","item","addItem","amount","orderHandler","cartItems","map","name","price","bind","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","callToAction","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmountBill = `â‚¹${cartCtx.totalAmountBill}`;\r\n  //console.log(totalAmountBill, 'Cart.ks',  cartCtx.totalAmountBill)\r\n  const cartHasItems = cartCtx.items.length > 0; //prefer useStae and if else to manage this\r\n\r\n  const cartItemnRemoveItemHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartAddItemHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n    //cartAddItemHandler.bind(null, item) //{()=>cartAddItemHandler(item)}\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemnRemoveItemHandler.bind(null, item.id)}\r\n          onAdd={cartAddItemHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    //skipped error handling\r\n    setIsSubmitting(true);\r\n    await fetch(\"https://foodorder-dcfa5-default-rtdb.firebaseio.com/orders\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: cartCtx.items,\r\n      }),\r\n    });\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const callToAction = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {cartHasItems && (<button className={classes.button} onClick={orderHandler}>Order</button>)}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmountBill}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && callToAction}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onBackdropClick={props.onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}