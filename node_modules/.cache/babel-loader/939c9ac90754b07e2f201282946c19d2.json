{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Food Order\\\\src\\\\store\\\\cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const existingCartItem = state.items.findById();\n    const updatedItems = state.items.concat(action.item);\n    console.log(updatedItems);\n    const updatedAmount = state.totalAmount + action.item.amount * action.item.price;\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {};\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React Food Order/src/store/cart-provider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItem","findById","updatedItems","concat","item","console","log","updatedAmount","amount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAMC,gBAAgB,GAAGH,KAAK,CAACH,KAAN,CAAYO,QAAZ,EAAzB;AACF,UAAMC,YAAY,GAAGL,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmBL,MAAM,CAACM,IAA1B,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,UAAMK,aAAa,GACjBV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACM,IAAP,CAAYI,MAAZ,GAAqBV,MAAM,CAACM,IAAP,CAAYK,KADvD;AAEA,WAAO;AACLf,MAAAA,KAAK,EAAEQ,YADF;AAELP,MAAAA,WAAW,EAAEY;AAFR,KAAP;AAID;;AACD,SAAOd,gBAAP;AACD,CAbD;;AAcA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMqB,oBAAoB,GAAIV,IAAD,IAAU;AACrCS,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,UAAR;AAAoBK,MAAAA,IAAI,EAAEA;AAA1B,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMW,yBAAyB,GAAIC,EAAD,IAAQ,CAAE,CAA5C;;AACA,QAAMC,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADC;AAElBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAMV,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n      const existingCartItem = state.items.findById()\r\n    const updatedItems = state.items.concat(action.item);\r\n    console.log(updatedItems);\r\n    const updatedAmount =\r\n      state.totalAmount + action.item.amount * action.item.price;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {};\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}