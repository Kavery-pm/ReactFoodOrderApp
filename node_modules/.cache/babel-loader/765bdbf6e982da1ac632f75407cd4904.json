{"ast":null,"code":"const CartProvider = props => {};\n\n_c = CartProvider;\nexport default cartProvider; // import { useReducer } from \"react\";\n// import CartContext from \"./cart-context\";\n// useReducer;\n// const defaultCartState = {\n//   items: [],\n//   totalAmount: 0,\n// };\n// const cartReducer = (state, action) => {\n//   if (action.type === \"ADD_ITEM\") {\n//     const updatedItems = state.items.concat(action.item);\n//     const updatedAmount =\n//       state.items.amount + action.item.amount * action.item.price;\n//   }\n//   return defaultCartState;\n// };\n// const CartProvider = (props) => {\n//   const [cartState, dispatchCartAction] = useReducer(\n//     cartReducer,\n//     defaultCartState\n//   );\n//   const addItemToCartHandler = (item) => {\n//     dispatchCartAction({ type: \"ADD_ITEM\", item: item });\n//   };\n//   const removeItemFromCartHandler = (id) => {\n//     dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\n//   };\n//   const cartContext = {\n//     items: [],\n//     totalAmount: 0,\n//     addItem: addItemToCartHandler,\n//     removeItem: removeItemFromCartHandler,\n//   };\n//   return (\n//     <CartContext.Provider value={cartContext}>\n//       {props.children}\n//     </CartContext.Provider>\n//   );\n// };\n// export default CartProvider;\n// import { useReducer } from \"react\";\n// import CartContext from \"./cart-context\";\n// const CartProvider = (props) => {\n//     const [cartState, dispatchcartState] = useReducer(cartReducer, defaultCartState);\n//   const addItemToCartHandler = (item) => {};\n//   const removeItemFromCartHandler = (id) => {};\n//   const cartContext = {\n//     items: [],\n//     totalAmount: 0,\n//     addItem: addItemToCartHandler,\n//     removeItem: removeItemFromCartHandler,\n//   };\n//   return <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>;\n// };\n// export default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React Food Order/src/store/cart-provider.js"],"names":["CartProvider","props","cartProvider"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,KAAK,IAAI,CAE7B,CAFD;;KAAMD,Y;AAIN,eAAeE,YAAf,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["const CartProvider = props => {\r\n\r\n}\r\n\r\nexport default cartProvider;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useReducer } from \"react\";\r\n// import CartContext from \"./cart-context\";\r\n// useReducer;\r\n// const defaultCartState = {\r\n//   items: [],\r\n//   totalAmount: 0,\r\n// };\r\n// const cartReducer = (state, action) => {\r\n//   if (action.type === \"ADD_ITEM\") {\r\n//     const updatedItems = state.items.concat(action.item);\r\n//     const updatedAmount =\r\n//       state.items.amount + action.item.amount * action.item.price;\r\n//   }\r\n//   return defaultCartState;\r\n// };\r\n// const CartProvider = (props) => {\r\n//   const [cartState, dispatchCartAction] = useReducer(\r\n//     cartReducer,\r\n//     defaultCartState\r\n//   );\r\n//   const addItemToCartHandler = (item) => {\r\n//     dispatchCartAction({ type: \"ADD_ITEM\", item: item });\r\n//   };\r\n\r\n//   const removeItemFromCartHandler = (id) => {\r\n//     dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\r\n//   };\r\n\r\n//   const cartContext = {\r\n//     items: [],\r\n//     totalAmount: 0,\r\n//     addItem: addItemToCartHandler,\r\n//     removeItem: removeItemFromCartHandler,\r\n//   };\r\n//   return (\r\n//     <CartContext.Provider value={cartContext}>\r\n//       {props.children}\r\n//     </CartContext.Provider>\r\n//   );\r\n// };\r\n// export default CartProvider;\r\n\r\n// import { useReducer } from \"react\";\r\n// import CartContext from \"./cart-context\";\r\n\r\n// const CartProvider = (props) => {\r\n//     const [cartState, dispatchcartState] = useReducer(cartReducer, defaultCartState);\r\n//   const addItemToCartHandler = (item) => {};\r\n//   const removeItemFromCartHandler = (id) => {};\r\n//   const cartContext = {\r\n//     items: [],\r\n//     totalAmount: 0,\r\n//     addItem: addItemToCartHandler,\r\n//     removeItem: removeItemFromCartHandler,\r\n//   };\r\n//   return <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>;\r\n// };\r\n\r\n// export default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}