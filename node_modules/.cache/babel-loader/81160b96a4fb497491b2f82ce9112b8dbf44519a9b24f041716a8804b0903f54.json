{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiny\\\\Downloads\\\\ReactFoodOrderApp\\\\src\\\\store\\\\cart-provider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmountBill: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmountBill = +(state.totalAmountBill + action.item.price * action.item.amount);\n    //console.log(updatedTotalAmountBill,'reducer')\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    //to sum above steps use directly find() method to get the item directly\n    let updatedItems;\n    //console.log(existingCartItem, existingCartItemIndex)\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items]; //copying the state cart items to update this referential value immutably\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item); //[..state.items, action.item]\n    }\n\n    /*  const index = state.items.findIndex(el => el.id === action.item.id);\r\n       if (index === -1) {\r\n          updatedItems = [...state.items, action.item];\r\n       } else {\r\n          updatedItems = [...state.items];\r\n          updatedItems[index].amount += action.item.amount;\r\n       } */\n\n    return {\n      items: updatedItems,\n      totalAmountBill: updatedTotalAmountBill\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    //console.log(existingCartItem, 'index', existingCartItemIndex);\n    let updatedItems;\n    const updatedTotalAmountBill = state.totalAmountBill - existingCartItem.price;\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== existingCartItem.id); //(item) => item.id !== action.id\n    } else {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      //console.log(updatedItems)\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    /* const index = state.items.findIndex(el => el.id === action.id);\r\n      if (state.items[index].amount === 1) {\r\n         updatedItems = state.items.filter(el => el.id !== action.id);\r\n      } else {\r\n         updatedItems = [...state.items];\r\n         updatedItems[index].amount -= 1;\r\n      } */\n    //if(updatedTotalAmount < 0) updatedTotalAmount = 0;\n    return {\n      items: updatedItems,\n      totalAmountBill: updatedTotalAmountBill\n    };\n  }\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    //item obj contains all the data i.e. name, amounts of the item, price etc\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n\n  //console.log('Beofre', cartState.totalAmountBill);\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmountBill: cartState.totalAmountBill,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  // console.log(cartState.totalAmountBill,'Just do It', cartContext.totalAmountBill)\n  //console.log(typeof cartState.totalAmountBill, typeof cartContext.totalAmountBill);\n  //console.log(cartState.items,'ctx', cartContext.items)\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmountBill","cartReducer","state","action","type","updatedTotalAmountBill","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiny/Downloads/ReactFoodOrderApp/src/store/cart-provider.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmountBill: 0\r\n} ;\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    \r\n    const updatedTotalAmountBill = +(state.totalAmountBill + (action.item.price * action.item.amount));\r\n    //console.log(updatedTotalAmountBill,'reducer')\r\n    \r\n    const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    //to sum above steps use directly find() method to get the item directly\r\n    let updatedItems;\r\n    //console.log(existingCartItem, existingCartItemIndex)\r\n\r\n    if(existingCartItem){\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount\r\n      }\r\n\r\n      updatedItems = [...state.items]; //copying the state cart items to update this referential value immutably\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }else{\r\n      updatedItems = state.items.concat(action.item);//[..state.items, action.item]\r\n    }\r\n\r\n   /*  const index = state.items.findIndex(el => el.id === action.item.id);\r\n      if (index === -1) {\r\n         updatedItems = [...state.items, action.item];\r\n      } else {\r\n         updatedItems = [...state.items];\r\n         updatedItems[index].amount += action.item.amount;\r\n      } */\r\n    \r\n    return {\r\n      items: updatedItems,\r\n      totalAmountBill: updatedTotalAmountBill\r\n    };\r\n  }\r\n  \r\n  if(action.type === 'REMOVE'){\r\n\r\n    const existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    //console.log(existingCartItem, 'index', existingCartItemIndex);\r\n    let updatedItems;\r\n    const updatedTotalAmountBill = state.totalAmountBill - existingCartItem.price;\r\n\r\n    if(existingCartItem.amount === 1){ \r\n      updatedItems = state.items.filter((item) => item.id !== existingCartItem.id)//(item) => item.id !== action.id\r\n    }else{\r\n      const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      //console.log(updatedItems)\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    /* const index = state.items.findIndex(el => el.id === action.id);\r\n      if (state.items[index].amount === 1) {\r\n         updatedItems = state.items.filter(el => el.id !== action.id);\r\n      } else {\r\n         updatedItems = [...state.items];\r\n         updatedItems[index].amount -= 1;\r\n      } */\r\n    //if(updatedTotalAmount < 0) updatedTotalAmount = 0;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmountBill: updatedTotalAmountBill\r\n    };\r\n  }\r\n\r\n  if(action.type === 'CLEAR'){\r\n    return defaultCartState;\r\n  }\r\n  \r\n  return defaultCartState;\r\n}; \r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => { //item obj contains all the data i.e. name, amounts of the item, price etc\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({type: 'CLEAR'});\r\n  }\r\n\r\n  //console.log('Beofre', cartState.totalAmountBill);\r\n  \r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmountBill: cartState.totalAmountBill,\r\n    addItem: addItemToCartHandler, \r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n // console.log(cartState.totalAmountBill,'Just do It', cartContext.totalAmountBill)\r\n  //console.log(typeof cartState.totalAmountBill, typeof cartContext.totalAmountBill);\r\n  //console.log(cartState.items,'ctx', cartContext.items)\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}